-- BOARD 조회
SELECT * FROM FREE_BOARD FB;

-- 글 별 좋아요수, 싫어요 수 조회
SELECT  BOARD_NO,
        SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE NULLIF(0, 0) END) AS LIKES,
        SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
FROM FREE_BOARD_LIKE_HATE
WHERE BOARD_NO = 1
GROUP BY BOARD_NO;

-- 멤버 조회
SELECT  NO
        , ID
        , NICK
        , IMG_PATH 
FROM MEMBER;

-- boardList 조회 쿼리문 (freeBoard, 댓글수, 좋아요수, 작성자닉네임, 작성자프로필사진 까지)
SELECT * FROM FREE_BOARD FB
JOIN (  SELECT  BOARD_NO,
                SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
        FROM FREE_BOARD_LIKE_HATE
        GROUP BY BOARD_NO) FLH
ON FB.NO = FLH.BOARD_NO
JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
ON FB.WRITER = M.NO
ORDER BY FB.NO;

SELECT * FROM FREE_BOARD FB
		JOIN (  SELECT  BOARD_NO,
		                SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
		                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
		        FROM FREE_BOARD_LIKE_HATE
		        GROUP BY BOARD_NO) FLH
		ON FB.NO = FLH.BOARD_NO
		JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
		ON FB.WRITER = M.NO
		WHERE FB.NO = 1
		ORDER BY FB.NO;
        
SELECT * FROM FREE_BOARD FB
		LEFT JOIN (  SELECT  BOARD_NO,
		                SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
		                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
		        FROM FREE_BOARD_LIKE_HATE
		        GROUP BY BOARD_NO) FLH
		ON FB.NO = FLH.BOARD_NO
		JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
		ON FB.WRITER = M.NO
		JOIN (SELECT NO, NAME CATE FROM FREE_BOARD_CATEGORY) FBC
		ON FBC.NO = FB.CATE_NO
        WHERE WRITER = 101
		ORDER BY FB.NO DESC;
		
	
        
INSERT INTO FREE_BOARD_CMT VALUES (
SEQ_FREEBOARD_CMT_NO.NEXTVAL,
1,
1,
'후후',
SYSDATE,
'N',
SYSDATE,
0,
NULL
);

SELECT * FROM FREE_BOARD_CATEGORY;

--좋아요, 스크랩 조회문
SELECT lh.M_NO, s.M_NO, COALESCE(lh.BOARD_NO, s.BOARD_NO) as BOARD_NO, COALESCE(lh.STATUS, 'null') as STATUS,
       CASE WHEN s.BOARD_NO IS NOT NULL THEN 'true' ELSE 'false' END as SCRAP
FROM FREE_BOARD_LIKE_HATE lh
FULL OUTER JOIN FREE_BOARD_SCRAP s
ON lh.BOARD_NO = s.BOARD_NO
WHERE lh.M_NO = 101 OR s.M_NO = 101
AND s.BOARD_NO = 15 OR lh.BOARD_NO = 15;

--스크랩 리스트 조회
SELECT *
FROM FREE_BOARD FB
LEFT JOIN (  SELECT  BOARD_NO,
                    SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
                    SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
            FROM FREE_BOARD_LIKE_HATE
            GROUP BY BOARD_NO) FLH
ON FB.NO = FLH.BOARD_NO
JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
ON FB.WRITER = M.NO
JOIN (SELECT NO, NAME CATE FROM FREE_BOARD_CATEGORY) FBC
ON FBC.NO = FB.CATE_NO
LEFT JOIN (SELECT BOARD_NO SCRAP FROM FREE_BOARD_SCRAP WHERE M_NO = 101) FBS
ON FB.NO = FBS.SCRAP
WHERE FBS.SCRAP IS NOT NULL
ORDER BY FB.NO DESC;


COMMIT;


--조회 임시..
SELECT FB.*, FLH.*, (COALESCE(FLH.LIKES, 0) - COALESCE(FLH.HATES, 0)) AS LH_COUNT,  M.*, FBC.*, CMT.count AS CMT_COUNT
		FROM FREE_BOARD FB
		LEFT JOIN (  SELECT  BOARD_NO,
                        SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
		                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
		        FROM FREE_BOARD_LIKE_HATE
		        GROUP BY BOARD_NO) FLH
		ON FB.NO = FLH.BOARD_NO
		JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
		ON FB.WRITER = M.NO
		JOIN (SELECT NO, NAME CATE FROM FREE_BOARD_CATEGORY) FBC
		ON FBC.NO = FB.CATE_NO
		LEFT JOIN (SELECT BOARD_NO, COUNT(*) as COUNT FROM FREE_BOARD_CMT GROUP BY BOARD_NO) CMT
		ON FB.NO = CMT.BOARD_NO
		ORDER BY FB.NO DESC;
        
SELECT FLH.*, (COALESCE(FLH.LIKES, 0) - COALESCE(FLH.HATES, 0)) AS LH_COUNT, M.*, FBC.*, FB.*
        FROM FREE_BOARD FB
		LEFT JOIN (  SELECT  BOARD_NO,
		                SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
		                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
		        FROM FREE_BOARD_LIKE_HATE
		        GROUP BY BOARD_NO) FLH
		ON FB.NO = FLH.BOARD_NO
		JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
		ON FB.WRITER = M.NO
		JOIN (SELECT NO, NAME CATE FROM FREE_BOARD_CATEGORY) FBC
		ON FBC.NO = FB.CATE_NO
		WHERE WRITER = 101
		ORDER BY FB.NO DESC;
        
        SELECT FB.*, FLH.*, (COALESCE(FLH.LIKES, 0) - COALESCE(FLH.HATES, 0)) AS LH_COUNT, M.*, FBC.*
		FROM FREE_BOARD FB
		LEFT JOIN (  SELECT  BOARD_NO,
		                SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
		                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
		        FROM FREE_BOARD_LIKE_HATE
		        GROUP BY BOARD_NO) FLH
		ON FB.NO = FLH.BOARD_NO
		JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
		ON FB.WRITER = M.NO
		JOIN (SELECT NO, NAME CATE FROM FREE_BOARD_CATEGORY) FBC
		ON FBC.NO = FB.CATE_NO
		WHERE FB.NO = 19
		ORDER BY FB.NO;
        
        SELECT fbc.*, NVL(lh.L_COUNT,0) AS LIKES, NVL(lh.H_COUNT,0) AS HATES, m.NICK as WRITER_NICK, m.IMG_PATH as WRITER_IMG
		FROM FREE_BOARD_CMT fbc
		LEFT JOIN (
		  SELECT CMT_NO,
		         SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS L_COUNT,
		         SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS H_COUNT
		  FROM FREE_BOARD_CMT_LIKE_HATE
		  GROUP BY CMT_NO
		) lh ON fbc.NO = lh.CMT_NO
		JOIN MEMBER m ON fbc.WRITER = m.NO
		WHERE fbc.BOARD_NO = 21
		ORDER BY fbc.NO DESC;
        SELECT FLH.*, (COALESCE(FLH.LIKES, 0) - COALESCE(FLH.HATES, 0)) AS LH_COUNT, M.*, FBC.*, FB.*
        FROM FREE_BOARD FB
		LEFT JOIN (  SELECT  BOARD_NO,
		                SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
		                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
		        FROM FREE_BOARD_LIKE_HATE
		        GROUP BY BOARD_NO) FLH
		ON FB.NO = FLH.BOARD_NO
		JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
		ON FB.WRITER = M.NO
		JOIN (SELECT NO, NAME CATE FROM FREE_BOARD_CATEGORY) FBC
		ON FBC.NO = FB.CATE_NO
		WHERE WRITER = 101
		ORDER BY FB.NO DESC;
        
        SELECT fbc.*, NVL(lh.L_COUNT,0) AS LIKES, NVL(lh.H_COUNT,0) AS HATES, m.NICK as WRITER_NICK, m.IMG_PATH as WRITER_IMG
		FROM FREE_BOARD_CMT fbc
		LEFT JOIN (
		  SELECT CMT_NO,
		         SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS L_COUNT,
		         SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS H_COUNT
		  FROM FREE_BOARD_CMT_LIKE_HATE
		  GROUP BY CMT_NO
		) lh ON fbc.NO = lh.CMT_NO
		JOIN MEMBER m ON fbc.WRITER = m.NO
		WHERE fbc.BOARD_NO = 24
		ORDER BY fbc."GROUP" DESC, fbc.MODIFY_DATE ASC;


--카테고리추가
INSERT INTO FREE_BOARD_CATEGORY VALUES (SEQ_FREEBOARD_CATEGORY_NO, '흠');
INSERT INTO FREE_BOARD_CATEGORY VALUES (SEQ_FREEBOARD_CATEGORY_NO.NEXTVAL, '자유');

--카테 조회
SELECT * FROM FREE_BOARD_CATEGORY 
ORDER BY NAME ASC;

--필터 추가한 리스트 조회
SELECT FB.*, FLH.*, (COALESCE(FLH.LIKES, 0) - COALESCE(FLH.HATES, 0)) AS LH_COUNT, M.*, FBC.*, CMT.count AS CMT_COUNT
FROM FREE_BOARD FB
LEFT JOIN (  SELECT  BOARD_NO,
                SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
        FROM FREE_BOARD_LIKE_HATE
        GROUP BY BOARD_NO) FLH
ON FB.NO = FLH.BOARD_NO
JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
ON FB.WRITER = M.NO
JOIN (SELECT NO, NAME CATE FROM FREE_BOARD_CATEGORY) FBC
ON FBC.NO = FB.CATE_NO
LEFT JOIN (SELECT BOARD_NO, COUNT(*) as COUNT FROM FREE_BOARD_CMT GROUP BY BOARD_NO) CMT
ON FB.NO = CMT.BOARD_NO
WHERE FB.CATE_NO = 1
AND WRITER_NICK LIKE '%부산%'
ORDER BY LH_COUNT DESC;
ORDER BY CMT_COUNT DESC;
ORDER BY FB.ENROLL_DATE DESC;
ORDER BY FB.NO DESC;

SELECT FB.*, FLH.*, (COALESCE(FLH.LIKES, 0) - COALESCE(FLH.HATES, 0)) AS LH_COUNT, M.*, FBC.*, CMT.count AS CMT_COUNT
		FROM FREE_BOARD FB
		LEFT JOIN (  SELECT  BOARD_NO,
		                SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
		                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
		        FROM FREE_BOARD_LIKE_HATE
		        GROUP BY BOARD_NO) FLH
		ON FB.NO = FLH.BOARD_NO
		JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
		ON FB.WRITER = M.NO
		JOIN (SELECT NO, NAME CATE FROM FREE_BOARD_CATEGORY) FBC
		ON FBC.NO = FB.CATE_NO
		LEFT JOIN (SELECT BOARD_NO, COUNT(*) as COUNT FROM FREE_BOARD_CMT GROUP BY BOARD_NO) CMT
		ON FB.NO = CMT.BOARD_NO
        ORDER BY FB.NO DESC;
        
SELECT FB.*, FLH.*, (COALESCE(FLH.LIKES, 0) - COALESCE(FLH.HATES, 0)) AS LH_COUNT, M.*, FBC.*, COALESCE(CMT.count, 0) AS CMT_COUNT
		FROM FREE_BOARD FB
		LEFT JOIN (  SELECT  BOARD_NO,
		                SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS LIKES,
		                SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS HATES
		        FROM FREE_BOARD_LIKE_HATE
		        GROUP BY BOARD_NO) FLH
		ON FB.NO = FLH.BOARD_NO
		JOIN (SELECT  NO, ID, NICK WRITER_NICK, IMG_PATH WRITER_IMG FROM MEMBER) M
		ON FB.WRITER = M.NO
		JOIN (SELECT NO, NAME CATE FROM FREE_BOARD_CATEGORY) FBC
		ON FBC.NO = FB.CATE_NO
		LEFT JOIN (SELECT BOARD_NO, COUNT(*) as COUNT FROM FREE_BOARD_CMT GROUP BY BOARD_NO) CMT
		ON FB.NO = CMT.BOARD_NO
		WHERE FB.DELETE_YN = 'N'
        AND FB.CATE_NO = 1
        ORDER BY CMT_COUNT DESC;
        
        
-- 특정 유저의 특정 글 좋아요 조회
SELECT * 
FROM FREE_BOARD_LIKE_HATE
M_NO = ? AND BOARD_NO =? ;

SELECT * 
FROM FREE_BOARD_LIKE_HATE
M_NO = 101 AND BOARD_NO = 30;

-- 특정 유저의 특정글 좋아요 하기
INSERT INTO FREE_BOARD_LIKE_HATE
VALUES (101, 14, 'L');


--좋아요 스크랩
SELECT lh.M_NO, s.M_NO, COALESCE(lh.BOARD_NO, s.BOARD_NO) as BOARD_NO, COALESCE(lh.STATUS, 'null') as STATUS,
		       CASE WHEN s.BOARD_NO IS NOT NULL THEN 'true' ELSE 'false' END as SCRAP
		FROM FREE_BOARD_LIKE_HATE lh
		FULL OUTER JOIN FREE_BOARD_SCRAP s
		ON lh.BOARD_NO = s.BOARD_NO
		WHERE (lh.M_NO = 101 OR s.M_NO = 101)
		AND (s.BOARD_NO = 37 OR lh.BOARD_NO = 37);
        
-- 댓글 좋아요 조회
SELECT fbc.*, NVL(lh.L_COUNT,0) AS LIKES, NVL(lh.H_COUNT,0) AS HATES, m.NICK as WRITER_NICK, m.IMG_PATH as WRITER_IMG
FROM FREE_BOARD_CMT fbc
LEFT JOIN (
  SELECT CMT_NO,
         SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS L_COUNT,
         SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS H_COUNT
  FROM FREE_BOARD_CMT_LIKE_HATE
  GROUP BY CMT_NO
) lh ON fbc.NO = lh.CMT_NO
JOIN MEMBER m ON fbc.WRITER = m.NO
WHERE fbc.BOARD_NO = 21
ORDER BY fbc."GROUP" ASC, fbc.MODIFY_DATE ASC;
        
SELECT CMT_NO, STATUS 
FROM FREE_BOARD_CMT_LIKE_HATE
WHERE M_NO = 101;

SELECT fbc.*, NVL(lh.L_COUNT,0) AS LIKES, NVL(lh.H_COUNT,0) AS HATES, m.NICK as WRITER_NICK, m.IMG_PATH as WRITER_IMG
, fbclh.STATUS as STATUS
FROM FREE_BOARD_CMT fbc
LEFT JOIN (
  SELECT CMT_NO,
         SUM(CASE WHEN STATUS = 'L' THEN 1 ELSE 0 END) AS L_COUNT,
         SUM(CASE WHEN STATUS = 'H' THEN 1 ELSE 0 END) AS H_COUNT
  FROM FREE_BOARD_CMT_LIKE_HATE
  GROUP BY CMT_NO
) lh ON fbc.NO = lh.CMT_NO
JOIN MEMBER m ON fbc.WRITER = m.NO
LEFT JOIN FREE_BOARD_CMT_LIKE_HATE fbclh ON fbc.NO = fbclh.CMT_NO AND fbclh.M_NO = 101
WHERE fbc.BOARD_NO = 21
ORDER BY fbc."GROUP" ASC, fbc.MODIFY_DATE ASC;

INSERT INTO MENTORING_SCHEDULE 
(NO, MENTOR_NO, ABLE_DAY, ABLE_TIME)
VALUES
(101, 1, 'MON', '22223123');
INSERT INTO MENTORING_SCHEDULE 
(NO, MENTOR_NO, ABLE_DAY, ABLE_TIME)
VALUES
(101, 1, 'TUE', '22223');

-- 멘토링 조회
SELECT MT.*, JC.NAME AS JOB_NAME, MB.NICK, MB.IMG_PATH AS WRITER_IMG, COALESCE(STAR.STAR , 0) AS STAR, COALESCE(STAR.REVIEW_COUNT, 0) AS REVIEW_CNT
FROM MENTOR MT
JOIN MEMBER MB
ON MT.WRITER = MB.NO
JOIN JOB_CATEGORY JC
ON JC.NO = MT.JOB
LEFT JOIN  (SELECT MENTOR_NO, COALESCE(ROUND(AVG(STAR), 2), 0) AS STAR, COALESCE(COUNT(MENTOR_NO), 0) AS REVIEW_COUNT
            FROM MENTORING_REVIEW
            GROUP BY MENTOR_NO) STAR
ON MT.NO = STAR.MENTOR_NO
WHERE MT.OPEN_YN = 'Y';

-- 리뷰수, 리뷰 평균점수
SELECT MENTOR_NO, COALESCE(AVG(STAR), 0) AS STAR, COALESCE(COUNT(MENTOR_NO), 0) AS REVIEW_COUNT
FROM MENTORING_REVIEW
GROUP BY MENTOR_NO;
          
-- 멘토 리뷰 조회 
SELECT MR.*, MB.NICK AS WRITER_NICK, MB.IMG_PATH AS WRITER_IMG, MT.TITLE AS MENTORING_TITLE, MT.NICK AS MENTOR_NICK
FROM MENTORING_REVIEW MR
JOIN MEMBER MB
ON MB.NO = MR.WRITER
JOIN    (SELECT MT.NO, MT.TITLE, MB.NICK 
        FROM MENTOR MT 
        JOIN MEMBER MB 
        ON MB.NO = MT.WRITER) MT
ON MR.MENTOR_NO = MT.NO
WHERE MR.MENTOR_NO = 20 AND ROWNUM <= 3
ORDER BY MR.NO DESC;

-- 멘토 상세조회
SELECT MT.*, JC.NAME AS JOB_NAME, MB.NICK, MB.IMG_PATH AS WRITER_IMG, COALESCE(STAR.STAR , 0) AS STAR, COALESCE(STAR.REVIEW_COUNT, 0) AS REVIEW_CNT
FROM MENTOR MT
JOIN MEMBER MB
ON MT.WRITER = MB.NO
JOIN JOB_CATEGORY JC
ON JC.NO = MT.JOB
LEFT JOIN (SELECT NO, COALESCE(AVG(STAR), 0) AS STAR, COALESCE(COUNT(NO), 0) AS REVIEW_COUNT
          FROM MENTORING_REVIEW
          GROUP BY NO) STAR
ON MT.NO = STAR.NO
WHERE MT.OPEN_YN = 'Y' AND MT.WRITER = 106;


INSERT INTO MENTORING_PAYMENT 
(NO, MENTOR_NO, M_NO, RESERVATION_DATE, RESERVATION_TIME, PHONE_NO, EMAIL, MESSAGE, PRICE, PAYMENT_TYPE, PAYMENT_DATE, CANCEL_YN)
VALUES (
SEQ_MENTOR_PAYMENT_NO.NEXTVAL
, 50 -- 멘토번호
, 106 -- 유저 번호
, '2022-12-12' 
, '22:00-23:00'
, '010'
, 'RYAN@GMAIL.COM'
, '잘좀 해줘어어~'
, 25000
, 'ㅎㅎ'
, SYSDATE
, 'N'
);

--신청한 멘토링 조회 (ApplicationVo)
SELECT MP.*, MT.TITLE, M.NICK AS MENTOR_NICK, M.IMG_PATH AS MENTOR_IMG
FROM MENTORING_PAYMENT MP
JOIN MENTOR MT
ON MT.NO = MP.MENTOR_NO
JOIN "MEMBER" M
ON M.NO = MP.MENTOR_NO
WHERE M_NO = 106;


SELECT MP.*, MT.TITLE, M.NICK AS MENTOR_NICK, M.IMG_PATH AS MENTOR_IMG, NVL(MR.WRITER, 0) AS REVIEW_WRITER
FROM MENTORING_PAYMENT MP
JOIN MENTOR MT
ON MT.NO = MP.MENTOR_NO
JOIN "MEMBER" M
ON M.NO = MT.WRITER
JOIN MENTORING_REVIEW MR
ON MR.PAYMENT_NO = MP.NO
WHERE M_NO = 106
ORDER BY MP.NO DESC;

SELECT MR.*, MB.NICK AS WRITER_NICK, MB.IMG_PATH AS WRITER_IMG, MT.TITLE AS MENTORING_TITLE, MT.NICK AS MENTOR_NICK, MT.CATE_NO
FROM MENTORING_REVIEW MR
JOIN MEMBER MB
ON MB.NO = MR.WRITER
JOIN    (SELECT MT.NO, MT.TITLE, MB.NICK, MT.CATE_NO 
        FROM MENTOR MT 
        JOIN MEMBER MB 
        ON MB.NO = MT.WRITER) MT
ON MR.MENTOR_NO = MT.NO
WHERE MR.CONTENT LIKE '%멘토%' OR MT.TITLE LIKE '%멘토%'
ORDER BY MR.NO DESC;





        
