<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">

	<!--로그인  -->
	<select id="login" resultType = "MemberVo">
		<if test="id != null and !('').equals(id) or pwd != null and !('').equals(pwd)">
			SELECT 
			M.NO
			,M.ID,M.PWD,M.PHONE,M.NICK
			,M.ENROLL_DATE,M.QUIT_YN,M.MODIFY_DATE,M.IMG_PATH AS IMG_NAME
			,M.ACCUM_TOKEN,G.NAME AS GRADE_NAME,G.IMG_PATH AS GRADE_IMG_PATH
			,M.HOLD_TOKEN,M.TECH_STACK_NO,M.ADMIN_YN,M.EMAIL_AUTH
			FROM MEMBER M
			JOIN MEMBER_GRADE G ON G.NO=(CASE
			       WHEN M.ACCUM_TOKEN >= 50 THEN '6'
			       WHEN M.ACCUM_TOKEN >= 40 THEN '5'
			       WHEN M.ACCUM_TOKEN >= 30 THEN '4'
			       WHEN M.ACCUM_TOKEN >= 20 THEN '3'
			       WHEN M.ACCUM_TOKEN >= 10 THEN '2'
			       WHEN M.ACCUM_TOKEN >= 0 THEN '1'
			       END)
			WHERE M.ID = #{id}
			AND M.EMAIL_AUTH=1
			AND M.QUIT_YN='N'
		</if>

	</select>
	
	<!--회원가입  -->
	<insert id="join">
	INSERT INTO MEMBER(NO,ID,PWD,PHONE,NICK,TECH_STACK_NO,HOLD_TOKEN,IMG_PATH)
	VALUES(SEQ_MEMBER_NO.NEXTVAL,#{id},#{pwd},#{phone},#{nick},#{teckStackNo},1,'/resources/img/profile_default.png')
	
	</insert>
	
	<!--닉네임 중복 체크  -->
	<select id="nickCheck" resultType = "Int">
		 SELECT COUNT(*)
		 FROM MEMBER
		 WHERE NICK = #{nick}
		 <if test="no != null and no != ''">
		AND NO NOT IN(${no})
		</if>
	</select>
	
	<!--이메일 중복 체크  -->
	<select id="emailCheck" resultType = "Int">
		 SELECT COUNT(*)
		 FROM MEMBER
		 WHERE ID = #{id}
		<if test="no != null and no != ''">
		    AND NO NOT IN(#{no})
		</if>
		
	</select>
	
	
	<!--메일 인증  -->
	<update id="updateEmailAuth">
		UPDATE MEMBER 
		SET EMAIL_AUTH='1'
		WHERE ID=#{email}
	</update>
	
	
	
	<!--아이디 찾기  -->
	<select id="findId" resultType = "MemberVo">
		 SELECT *
		  FROM MEMBER
		  WHERE PHONE = #{phone}
	</select>
	
	<!--비밀번호 찾기  -->
	<select id="findPwd" resultType = "MemberVo">
		 SELECT *
		  FROM MEMBER
		  WHERE ID = #{id}
	</select>
	
	<!--비밀번호 재설정  -->
	<update id="editPwd">
		UPDATE MEMBER 
		SET PWD=#{pwd},
			MODIFY_DATE=SYSDATE	
		WHERE ID=#{id}
	</update>
	
	
	<!--탈퇴  -->
	<update id="memberDeletePwd">
		UPDATE MEMBER 
		SET QUIT_YN='Y',
		MODIFY_DATE=SYSDATE	
		WHERE ID='${id}'
	</update>
	
	<!--계정정보 닉네임,소개,프로필사진 수정  -->
	<update id="mypageEditIntro">
		UPDATE MEMBER 
		SET INTRO=#{intro},
			MODIFY_DATE=SYSDATE
		WHERE NO=#{no}
	</update>
	
	 
	
	<!--계정정보 닉네임,소개,프로필사진 수정  -->
	<update id="mypageEdiProfile">
		UPDATE MEMBER 
		SET NICK=#{nick},
			INTRO=#{intro},
			<if test="imgName != null and imgName != ''">
			IMG_PATH=#{imgName},
			</if>
			MODIFY_DATE=SYSDATE
		WHERE NO=#{no}
	</update>
	
	<!--계정정보 이메일 수정  -->
	<update id="mypageEditEmail">
		UPDATE MEMBER 
		SET ID=#{id},
			EMAIL_AUTH='0',
			MODIFY_DATE=SYSDATE
		WHERE NO=#{no}
	</update>
	
	<!--전화번호 -->
	<update id="mypageEditPhone">
		UPDATE MEMBER 
		SET PHONE=#{phone},
			MODIFY_DATE=SYSDATE
		WHERE NO=#{no}
	</update>
	
	<!--회원 조회(회원 번호로)  -->
	<select id="selectNo" resultType = "MemberVo">
	
	SELECT 
	M.NO
	,M.ID,M.PWD,M.PHONE,M.NICK
	,M.ENROLL_DATE,M.QUIT_YN,M.MODIFY_DATE,M.IMG_PATH AS IMG_NAME,M.INTRO
	,M.ACCUM_TOKEN,G.NAME AS GRADE_NAME,G.IMG_PATH AS GRADE_IMG_PATH
	,M.HOLD_TOKEN,M.TECH_STACK_NO,M.ADMIN_YN,M.EMAIL_AUTH
	FROM MEMBER M
	JOIN MEMBER_GRADE G ON G.NO=(CASE
	       WHEN M.ACCUM_TOKEN >= 50 THEN '6'
	       WHEN M.ACCUM_TOKEN >= 40 THEN '5'
	       WHEN M.ACCUM_TOKEN >= 30 THEN '4'
	       WHEN M.ACCUM_TOKEN >= 20 THEN '3'
	       WHEN M.ACCUM_TOKEN >= 10 THEN '2'
	       WHEN M.ACCUM_TOKEN >= 0 THEN '1'
	       END)
	WHERE M.NO = #{no}
	AND M.EMAIL_AUTH='1'

		
	
	</select>
	
	
	<!--팔로우하기  -->
	<insert id="follow">
	INSERT INTO FOLLOW(NO,FOLLOWING_NO,FOLLOWER_NO)
	VALUES(SEQ_FALLOW_NO.NEXTVAL,#{followingNo},#{followerNo})
	</insert>
	
	<!--언팔로우하기  -->
	<delete id="unfollow">
	DELETE FROM FOLLOW
	WHERE FOLLOWING_NO=#{followingNo}
	AND FOLLOWER_NO=#{followerNo}
	</delete>
	
	
	<!--나를 팔로우 하는 사람 수  -->
	<select id="followerCnt" resultType = "Int">
		 SELECT COUNT(*)
		 FROM FOLLOW
		 WHERE FOLLOWER_NO = #{no}
	</select>
	
	<!--내가 팔로우 하는 사람 수  -->
	<select id="followingCnt" resultType = "Int">
		 SELECT COUNT(*)
		 FROM FOLLOW
		 WHERE FOLLOWING_NO = #{no}
	</select>
	
	
	<!--나를 팔로우 하는 사람 리스트  -->
	<select id="followerList" resultType = "MemberVo">
		 SELECT M.NICK,M.IMG_PATH AS IMG_NAME,M.NO
		FROM FOLLOW F
		JOIN MEMBER M ON M.NO=F.FOLLOWING_NO
		WHERE F.FOLLOWER_NO = #{no}
	</select>
	
	<!--내가 팔로우 하는 사람 리스트  -->
	<select id="followingList" resultType = "MemberVo">
		SELECT M.NICK,M.IMG_PATH AS IMG_NAME,M.NO
		FROM FOLLOW F
		JOIN MEMBER M ON M.NO=F.FOLLOWER_NO
		WHERE F.FOLLOWING_NO = #{no}
	</select>
	
	<!-- 팔로우 유무  -->
	<select id="followCheck" resultType = "Int">
		 SELECT COUNT(*)
		 FROM FOLLOW
		 WHERE FOLLOWING_NO=#{followingNo}
	     AND FOLLOWER_NO=#{followerNo}
	</select>
	
	
	<!--어드민 멤버리스트  -->
	<select id="memberList" resultType="map">
		SELECT 
		M.NO,M.NICK,M.ID,M.ADMIN_YN,
		M.ACCUM_TOKEN,G.NAME AS GRADE_NAME,
		G.IMG_PATH AS GRADE_IMG_PATH,M.ENROLL_DATE,M.HOLD_TOKEN,M.PHONE,
		((SELECT COUNT(*) FROM FREE_BOARD WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM "RECRUIT_GROUP" WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM GROUP_BOARD WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM KNOWLEDGE_QUESTION WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM MAKE_GRASS WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM RECRUIT_GROUP WHERE M.NO=WRITER)) AS BOARD,
		((SELECT COUNT(*) FROM FREE_BOARD_CMT WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM GROUP_BOARD_CMT WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM GROUP_CMT WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM MG_CMT WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM NOTICE_CMT WHERE M.NO=WRITER)
		+(SELECT COUNT(*) FROM QUESTION_BOARD_CMT WHERE M.NO=WRITER)) AS CMT,
		((SELECT COUNT(*) FROM QUESTION_BOARD WHERE M.NO=WRITER))AS QNA,
		M.QUIT_YN
		FROM MEMBER M
		JOIN MEMBER_GRADE G ON G.NO=(CASE
		       WHEN M.ACCUM_TOKEN >= 50 THEN '6'
		       WHEN M.ACCUM_TOKEN >= 40 THEN '5'
		       WHEN M.ACCUM_TOKEN >= 30 THEN '4'
		       WHEN M.ACCUM_TOKEN >= 20 THEN '3'
		       WHEN M.ACCUM_TOKEN >= 10 THEN '2'
		       WHEN M.ACCUM_TOKEN >= 0 THEN '1'
		       END)
		WHERE M.EMAIL_AUTH=1
		 <if test="vo.keyword != null and vo.keyword != ''">
		AND ${vo.category} LIKE '%${vo.keyword}%'
		</if>
		<if test="vo.quitYn != null and vo.quitYn != ''">
			AND M.QUIT_YN = '${vo.quitYn}'
		</if>
		<if test="vo.adminYn != null and vo.adminYn != ''">
			AND M.ADMIN_YN = '${vo.adminYn}'
		</if>
		
		ORDER BY M.NO

	</select>
	
	
	
	<!--어드민 멤버 수정 -->
	<update id="adminMemberedit">
		UPDATE MEMBER 
		SET ID=#{id},
			NICK=#{nick},
			PHONE=#{phone},
			ACCUM_TOKEN=#{accumToken},
			MODIFY_DATE=SYSDATE
		WHERE NO=#{no}
	</update>
	
	
	<!--어드민 운영자 추가 -->
	<insert id="createOperator">
		INSERT INTO MEMBER(NO,ID,NICK,PWD,PHONE,ADMIN_YN,EMAIL_AUTH,IMG_PATH)
		VALUES (SEQ_MEMBER_NO.NEXTVAL,#{id},#{nick},#{pwd},#{phone},#{adminYn},1,'/resources/img/puffer-fish.png')
	</insert>
	
	<!--멤버 등급 조회 -->
	<select id="memberGrade" resultType = "Map">
		SELECT *
		FROM MEMBER_GRADE
		ORDER BY ACCUM_TOKEN
	</select>
	
	
	<!--멤버 리스트에서 등급 수정 -->
	<update id="memberListGradeEdit">
		UPDATE MEMBER 
		SET ACCUM_TOKEN=#{accumToken},
			MODIFY_DATE=SYSDATE
		WHERE NO IN
		<foreach collection="no" item="no" open="(" separator="," close=")">
       	 #{no}
  		</foreach>
	</update>
	
	
	<!--멤버 리스트에서 회원 탈퇴 -->
	<update id="memberListMemberDelte">
		UPDATE MEMBER 
		SET QUIT_YN='Y',
			MODIFY_DATE=SYSDATE
		<foreach collection="array" item="checkNo" open="WHERE NO IN (" separator="," close=")">
       	 #{checkNo}
  		</foreach>
  		
	</update>
	
	
	<!--등급 관리 수정 -->
	<update id="memberGradeEdit">
		<foreach collection="list" item="list" open="DECLARE BEGIN" separator=";" close="; END;">
		UPDATE MEMBER_GRADE SET
		NAME = #{list.name},
		ACCUM_TOKEN = #{list.accumToken},
		IMG_PATH = #{list.imgName}
       	WHERE NO= #{list.no}
  		</foreach>
	</update>
	
	
	
	<!--등급 관리 추가 -->
	<insert id="memberGradeinfoEdit">
		INSERT INTO MEMBER_GRADE(NO,NAME,ACCUM_TOKEN,IMG_PATH)
		VALUES (SEQ_MEMBER_GRADE_NO.NEXTVAL,#{name},#{accumToken},#{imgName})
	</insert>
	
	<!--등급 관리 삭제 -->
	<delete id="memberGradeinfoDelete">
	DELETE MEMBER_GRADE
	WHERE NO=#{gradeNo}
	
	</delete>
	
	<!-- 멤버 전체 인원-->
	<select id="memberCnt" resultType="Int">
		SELECT COUNT(*)
		FROM MEMBER M
		JOIN MEMBER_GRADE G ON G.NO=(CASE
		       WHEN M.ACCUM_TOKEN >= 50 THEN '6'
		       WHEN M.ACCUM_TOKEN >= 40 THEN '5'
		       WHEN M.ACCUM_TOKEN >= 30 THEN '4'
		       WHEN M.ACCUM_TOKEN >= 20 THEN '3'
		       WHEN M.ACCUM_TOKEN >= 10 THEN '2'
		       WHEN M.ACCUM_TOKEN >= 0 THEN '1'
		       END)
		WHERE M.EMAIL_AUTH=1
		 <if test="keyword != null and keyword != ''">
		AND ${category} LIKE '%${keyword}%'
		</if>
		<if test="quitYn != null and quitYn != ''">
			AND M.QUIT_YN = '${quitYn}'
		</if>
		<if test="adminYn != null and adminYn != ''">
			AND M.ADMIN_YN = '${adminYn}'
		</if>
		
		
		ORDER BY M.NO
	</select>
	

</mapper>