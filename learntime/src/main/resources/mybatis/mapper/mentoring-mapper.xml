<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mentorMapper">

	<!-- 멘토 등록 -->
	<insert id="registerMentor">
		INSERT INTO MENTOR 
		(NO, WRITER, CATE_NO, EMAIL, NAME, PHONE_NO, LINK, ACCOUNT_BANK, ACCOUNT_NO, INTRO, ENROLL_DATE, MODIFY_DATE)
		VALUES 
		(
		SEQ_MENTOR_NO.NEXTVAL
		, #{writer}
		, #{cateNo}
		, #{email}
		, #{name}
		, #{phoneNo}
		, #{link}
		, #{accountBank}
		, #{accountNo}
		, #{intro}
		, SYSDATE
		, SYSDATE
		)
	</insert>
	
	<!-- 멘토 수정 -->
	<update id="updateMentor">
		UPDATE MENTOR
		SET EMAIL = #{email},
		NAME = #{name},
		PHONE_NO = #{phoneNo},
		LINK = #{link},
		ACCOUNT_BANK = #{accountBank},
		ACCOUNT_NO = #{accountNo},
		INTRO = #{intro},
		MODIFY_DATE = SYSDATE
		WHERE WRITER = #{writer}
	</update>
	
	<!-- 멘토링 등록 -->
	<update id="registerMentoring">
		UPDATE MENTOR
		SET JOB = #{job}
		, M_EMAIL = #{mEmail}
		, M_PHONE_NO = #{mPhoneNo}
		, CATE_NO = #{cateNo}
		, TITLE = #{title}
		, CURRENT_JOB = #{currentJob}
		, CAREER = #{career}
		, PRICE = #{price}
		, MAX_HOUR = #{maxHour}
		, DETAIL = #{detail}
		, WELCOME_POST = #{welcomePost}
		, OPEN_YN = 'Y'
		WHERE WRITER = #{writer}
	</update>
	
	<select id="selectJob" resultType="map">
		SELECT * FROM
		JOB_CATEGORY
	</select>
	
	<select id="selectCateNo" resultType="map">
		SELECT * FROM
		MENTORING_CATEGORY
	</select>
	
	<select id="selectMentor" resultType = "com.learntime.app.mertoring.vo.MentorVo">
		SELECT * FROM
		MENTOR
		WHERE WRITER = #{no}
	</select>
	
	
	<insert id="insertSchedule" parameterType="java.util.List">
		INSERT INTO MENTORING_SCHEDULE (NO, MENTOR_NO, ABLE_DAY, ABLE_TIME)
			SELECT SEQ_MENTORING_SCHEDULE_NO.NEXTVAL, A.* 
			FROM(
			<foreach collection="list" item="item" index="index" separator="UNION ALL">
	        	SELECT #{item.mentorNo}, #{item.ableDay}, #{item.ableTime} FROM DUAL
	        </foreach>
	        ) A
	</insert>
	
	<!-- 멘토리스트 조회 -->
	<select id="selectMentorList" resultType = "com.learntime.app.mertoring.vo.MentorVo">
		SELECT MT.*, JC.NAME AS JOB_NAME, MB.NICK, MB.IMG_PATH AS WRITER_IMG, COALESCE(STAR.STAR , 0) AS STAR, COALESCE(STAR.REVIEW_COUNT, 0) AS REVIEW_CNT
		FROM MENTOR MT
		JOIN MEMBER MB
		ON MT.WRITER = MB.NO
		JOIN JOB_CATEGORY JC
		ON JC.NO = MT.JOB
		LEFT JOIN  (SELECT MENTOR_NO, COALESCE(ROUND(AVG(STAR), 1), 0) AS STAR, COALESCE(COUNT(MENTOR_NO), 0) AS REVIEW_COUNT
		            FROM MENTORING_REVIEW
		            GROUP BY MENTOR_NO) STAR
		ON MT.NO = STAR.MENTOR_NO
		WHERE MT.OPEN_YN = 'Y'
		<if test ="search != null">AND MT.TITLE LIKE '%${search}%'</if>
		<if test ="categoryArr != null">
			AND (MT.CATE_NO = 100 
			<foreach collection = "categoryArr" item="item" index="index" separator=" ">
			OR MT.CATE_NO = ${item} 
			</foreach>
			)
		</if>
		<if test ='sorting == null'>ORDER BY MT.NO DESC</if>
		<if test ='sorting != null and sorting.equals("1")'>ORDER BY MT.ENROLL_DATE DESC</if>
		<if test ='sorting != null and sorting.equals("2")'>ORDER BY STAR DESC</if>
		
	</select>
	
	<!-- 멘토링 상세조회 -->
	<select id="selectMentoring" resultType = "com.learntime.app.mertoring.vo.MentorVo">
		SELECT MT.*, JC.NAME AS JOB_NAME, MB.NICK, MB.IMG_PATH AS WRITER_IMG, COALESCE(STAR.STAR , 0) AS STAR, COALESCE(STAR.REVIEW_COUNT, 0) AS REVIEW_CNT
		FROM MENTOR MT
		JOIN MEMBER MB
		ON MT.WRITER = MB.NO
        JOIN JOB_CATEGORY JC
        ON JC.NO = MT.JOB
		LEFT JOIN (SELECT NO, COALESCE(AVG(STAR), 0) AS STAR, COALESCE(COUNT(NO), 0) AS REVIEW_COUNT
			      FROM MENTORING_REVIEW
			      GROUP BY NO) STAR
		ON MT.NO = STAR.NO
		WHERE MT.OPEN_YN = 'Y' AND MT.NO = #{no}
	</select>
	
	<select id="selectReviewByNo" resultType = "com.learntime.app.mertoring.vo.ReviewVo">
		SELECT MR.*, MB.NICK AS WRITER_NICK, MB.IMG_PATH AS WRITER_IMG, MT.TITLE AS MENTORING_TITLE, MT.NICK AS MENTOR_NICK
		FROM MENTORING_REVIEW MR
		JOIN MEMBER MB
		ON MB.NO = MR.WRITER
		JOIN    (SELECT MT.NO, MT.TITLE, MB.NICK 
		        FROM MENTOR MT 
		        JOIN MEMBER MB 
		        ON MB.NO = MT.WRITER) MT
		ON MR.MENTOR_NO = MT.NO
		WHERE MR.MENTOR_NO = #{no} AND <![CDATA[ ROWNUM <= 3]]>
		ORDER BY MR.NO DESC
	</select>
	
	<!-- 멘토링 시간 조회 -->
	<select id="selectmentorSchedule" resultType = "com.learntime.app.mertoring.vo.ScheduleVo">
		SELECT * FROM MENTORING_SCHEDULE
		WHERE ABLE_DAY = #{ableDay} AND MENTOR_NO = #{mentorNo}
	</select>
	
	<!-- 멘토링 신청 -->
	<insert id="insertApplication">
		INSERT INTO MENTORING_PAYMENT 
		(NO, MENTOR_NO, M_NO, RESERVATION_DATE, RESERVATION_TIME, PHONE_NO, EMAIL, MESSAGE, PRICE, PAYMENT_TYPE, PAYMENT_DATE)
		VALUES (
		SEQ_MENTOR_PAYMENT_NO.NEXTVAL
		, #{mentorNo}
		, #{mNo}
		, #{reservationDate}
		, #{reservationTime}
		, #{phoneNo}
		, #{email}
		, #{massage}
		, #{price}
		, 'null'
		, SYSDATE
		)
	</insert>
	
	<!-- 신청한 멘토링 조회 -->
	<select id="selectApplication" resultType = "com.learntime.app.mertoring.vo.ApplicationVo">
		SELECT MP.*, MT.TITLE, M.NICK AS MENTOR_NICK, M.IMG_PATH AS MENTOR_IMG, NVL(MR.WRITER, 0) AS REVIEW_WRITER
		FROM MENTORING_PAYMENT MP
		JOIN MENTOR MT
		ON MT.NO = MP.MENTOR_NO
		JOIN "MEMBER" M
		ON M.NO = MT.WRITER
		LEFT JOIN MENTORING_REVIEW MR
		ON MR.PAYMENT_NO = MP.NO
		WHERE M_NO = #{userNo}
		ORDER BY MP.NO DESC
	</select>
	
	<!-- 리뷰 조회 -->
	<select id="selectReview" resultType = "com.learntime.app.mertoring.vo.ReviewVo">
		SELECT MR.*, MB.NICK AS WRITER_NICK, MB.IMG_PATH AS WRITER_IMG, MT.TITLE AS MENTORING_TITLE, MT.NICK AS MENTOR_NICK, MT.CATE_NO
		FROM MENTORING_REVIEW MR
		JOIN MEMBER MB
		ON MB.NO = MR.WRITER
		JOIN    (SELECT MT.NO, MT.TITLE, MB.NICK, MT.CATE_NO 
		        FROM MENTOR MT 
		        JOIN MEMBER MB 
		        ON MB.NO = MT.WRITER) MT
		ON MR.MENTOR_NO = MT.NO
		<if test = "search != null">WHERE MR.CONTENT LIKE '%${search}%' OR MT.TITLE LIKE '%${search}%'</if>
		<if test = "categoryArr != null and search != null">
			AND (MT.CATE_NO = 100 
			<foreach collection = "categoryArr" item="item" index="index" separator=" ">
			OR MT.CATE_NO = ${item} 
			</foreach>
			)
		</if>
		<if test = "categoryArr != null and search == null">
			WHERE (MT.CATE_NO = 100 
			<foreach collection = "categoryArr" item="item" index="index" separator=" ">
			OR MT.CATE_NO = ${item} 
			</foreach>
			)
		</if>
		<if test ='sorting == null'>ORDER BY MR.NO DESC</if>
		<if test ='sorting != null and sorting.equals("1")'>ORDER BY MR.ENROLL_DATE DESC</if>
		<if test ='sorting != null and sorting.equals("2")'>ORDER BY STAR DESC</if>
	</select>
	
	<!-- 나에게 온 멘토링 요청 조회 -->
	<select id="selectRequest" resultType = "com.learntime.app.mertoring.vo.ApplicationVo">
		SELECT MP.*, MT.TITLE, M.NICK AS MENTEE_NICK
		FROM MENTORING_PAYMENT MP
		JOIN MENTOR MT
		ON MT.NO = MP.MENTOR_NO
		JOIN "MEMBER" M
		ON M.NO = MP.M_NO
		WHERE MP.MENTOR_NO = #{myNo}
		ORDER BY MP.NO DESC
	</select>
	
	<!-- 멘토링 요청 수락(업데이트) -->
	<update id="updateRequest">
		UPDATE MENTORING_PAYMENT
		SET APPLY_YN = 'Y'
		WHERE NO = #{no}
	</update>
	
	<!-- 멘토링 요청 수락(업데이트) -->
	<update id="updateComplete">
		UPDATE MENTORING_PAYMENT
		SET COMPLETE_YN = 'Y'
		WHERE NO = #{no}
	</update>
	
	<!-- 리뷰 작성 -->
	<insert id="insertReview">
		INSERT INTO MENTORING_REVIEW
		VALUES(
		SEQ_MENTOR_REVIEW_NO.NEXTVAL,
		#{mentorNo},
		#{writer},
		#{content},
		#{star},
		SYSDATE,
		'N',
		SYSDATE,
		#{paymentNo}
		)
	</insert>
	
	
	
	

</mapper>